package markus.wieland.games.screen;

import android.view.ViewGroup;

import androidx.annotation.NonNull;

import markus.wieland.games.game.GameConfiguration;
import markus.wieland.games.screen.interact_listener.StartScreenInteractListener;

/**
 * @author Markus Wieland
 * @since 03.04.2021
 * <p>
 * Child class of {@link Screen}. This class implements a start screen for the games. This screen will
 * be shown at the start of the activity. There the user shall configure the game (difficulty, amount player etc..)
 */
public abstract class StartScreen extends Screen {

    /**
     * {@link Screen}
     *
     * @param background base view of the screen
     */
    public StartScreen(@NonNull ViewGroup background) {
        super(background);
    }

    /**
     * In the {@link #close()} method a {@link StartScreenInteractListener} notifies the activity
     * that the user finished configuring the game. The {@link StartScreenInteractListener} uses this
     * method to generate the {@link GameConfiguration} which will be given to the activity.
     * Implement this method to build a custom {@link GameConfiguration} from your {@link StartScreen}
     *
     * @return configuration of the user
     */
    protected abstract GameConfiguration getConfiguration();

    /**
     * Hides the screen. At the same time {@link StartScreenInteractListener} calls the {@link StartScreenInteractListener#onClose(GameConfiguration)}
     * The {@link GameConfiguration} the {@link StartScreenInteractListener} uses will be generated by the {@link #getConfiguration()} method.
     */
    @Override
    public void close() {
        super.close();
        ((StartScreenInteractListener) screenInteractListener).onClose(getConfiguration());
    }
}
